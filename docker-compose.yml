version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: focus_timer_postgres
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: focus_timer_redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-StrongRedisPassw0rd}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Django Backend with Uvicorn
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: focus_timer_backend
    env_file:
      - .env
    environment:
      - DATABASE_HOST=postgres
      - REDIS_CONNECTION_URL=redis://:${REDIS_PASSWORD:-StrongRedisPassw0rd}@redis:6379/0
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - static_files:/app/static
      - media_files:/app/media
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/control-room1/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.celery
    container_name: focus_timer_celery_worker
    command: celery -A backend worker --loglevel=info
    env_file:
      - .env
    environment:
      - DATABASE_HOST=postgres
      - REDIS_CONNECTION_URL=redis://:${REDIS_PASSWORD:-StrongRedisPassw0rd}@redis:6379/0
    volumes:
      - ./backend:/app
      - media_files:/app/media
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped

  # Celery Beat Scheduler
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile.celery
    container_name: focus_timer_celery_beat
    command: celery -A backend beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - .env
    environment:
      - DATABASE_HOST=postgres
      - REDIS_CONNECTION_URL=redis://:${REDIS_PASSWORD:-StrongRedisPassw0rd}@redis:6379/0
    volumes:
      - ./backend:/app
      - media_files:/app/media
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped

  # Frontend Development Server
  frontend-dev:
    build:
      context: ./frontend-vue
      dockerfile: Dockerfile.dev
    container_name: focus_timer_frontend_dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend-vue:/app
      - /app/node_modules
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
    profiles:
      - dev

  # Frontend Production Build
  frontend-prod:
    build:
      context: ./frontend-vue
      dockerfile: Dockerfile.prod
    container_name: focus_timer_frontend_prod
    volumes:
      - frontend_dist:/app/dist
    profiles:
      - prod

  # Nginx Reverse Proxy
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: focus_timer_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_files:/var/www/static:ro
      - media_files:/var/www/media:ro
      - frontend_dist:/var/www/frontend:ro
    depends_on:
      - backend
    profiles:
      - prod

volumes:
  postgres_data:
  redis_data:
  static_files:
  media_files:
  frontend_dist:

networks:
  default:
    name: focus_timer_network
